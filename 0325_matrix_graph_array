#include <stdio.h>
#define MAX_NODE 100

int GM[MAX_NODE][MAX_NODE];


int name2int(char c) {
    return c - 'A';
}



char int2name(int i) {
    return i + 'A';
}



void input_adjmatrix(int a[][MAX_NODE], int* V, int* E) {
    char vertex[3];  
    int i, j, k;

    printf("\nInput number of nodes & edges: ");
    scanf_s("%d %d", V, E);



        // 인접 행렬 초기화
        for (i = 0; i < *V; i++) {
            for (j = 0; j < *V; j++) {
                a[i][j] = 0;
            }
        }



        //대각 행렬은 무조건 1
        for (i = 0; i < *V; i++) {
            a[i][i] = 1;
        }



        //선 정보 입력
        for (k = 0; k < *E; k++) {
            printf("\nInput two nodes consisting of an edge (e.g., AB): ");
            scanf_s("%3s", vertex, (unsigned)vertex);  

            i = name2int(vertex[0]);
            j = name2int(vertex[1]);

            a[i][j] = 1;
            a[j][i] = 1;
        }
}





void print_adjmatrix(int a[][MAX_NODE], int *V) {
    int i, j;

    printf("    ");  // 첫 번째 행 맞추기
    
    for (i = 0; i <* V; i++) {
        printf("%4c", int2name(i));  // 열 제목
    }
        
    printf("\n");


    for (i = 0; i < *V; i++) {
        printf("%4c", int2name(i));  // 행 제목
        
        for (j = 0; j < *V; j++) {
            printf("%4d", a[i][j]);  
        }
        printf("\n");
    }
}



void main() {
    int V, E;

    input_adjmatrix(GM, &V, &E);
    print_adjmatrix(GM, & V);  

    return;
}
